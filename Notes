Kalah.cpp Kalah.hpp:
    - isValidMove():
        - Checks if chose move integer is > 0 and < numHouses
        - Checks if chosen house is empty
    - doMove():
        - Removes seeds from the chosen house and sows seeds CCW around the board
        - Checks for condition to capture opponent's seeds
        - Checks if one of the players has run out of seeds for end game condition
        - Checks whether the current player has another turn or not
    - showBoard():
        - Prints out the current state of game -- the current turn and board composition
    - endGame():
        - Transfers all the seeds from the player's houses to their store
        - Sets the game outcome to NorthWin, SouthWin, or Tie
    - isGameOver():
        - Used by Game.cpp to query if the game is over
    - getGameOutcome():
        - Returns the outcome
    - operator<<():
        - Prints the players' current amount of seeds in their stores


Game.cpp Game.hpp:
    - doMove():
        - Checks if the token is "q" for quiting the game
        - Uses try-catch to convert token into move integer
        - Calls Kalah::doMove() to process the move integer
    - playGame():
        - Receives an istringstream (iss) pointer from main
        - If "iss" is a nullptr:
            - Expect user input from cin
            - Read line of input from cin and use istringstream to process tokens
        - If "iss" is not null:
            - Process individual tokens seperated by whitespace as move commands
        - After each move, the function queries Kalah::isGameOver() to check if the game
          is over
        - Prints out end game message stating which player won the game (or a tie)


Board.cpp Board.hpp:
    - Implements functions for querying number of seeds in each pit and for adding,
      removing, and transfering seeds.
    - captureOppositePit():
        - Removes seeds from current pit and opposite pit, transfering them to the player's
          store pit
    - operator<<():
        - Prints out the current board composition


Pit.cpp Pit.hpp:
    - Implements functions for adding and removing seeds from pits